{"ast":null,"code":"var _jsxFileName = \"/Users/zihadislam/react-app/frontend/src/components/pages/Vaccine-Staff-pages/Vaccine_Staff_Add_Vaccine.js\";\nimport React from 'react';\nimport '../../../App.css';\nimport Footer from '../../Footer';\nimport Vaccine_Staff_Navbar from './Vaccine_Staff_Navbar';\nimport './Vaccine_Staff_Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Vaccine_Staff_Add_Vaccine() {\n  // Require JS driver\n  const driver = require('bigchaindb-driver'); // Create an identity key pair\n\n\n  const myIdentity = new driver.Ed25519Keypair(); //Connect to the BigchainDB test network\n\n  const conn = new driver.Connection('https://test.bigchaindb.com/api/v1/'); // Create a new transaction\n\n  const tx = driver.Transaction.makeCreateTransaction({\n    name: 'My Asset',\n    immutable_attr1: \"bla bla\"\n  }, {\n    metadata1: \"here goes\",\n    metadata2: \"my metadata attributes\"\n  }, [driver.Transaction.makeOutput(driver.Transaction.makeEd25519Condition(myIdentity.publicKey))], alice.publicKey); //Sign the transaction\n\n  const txSigned = driver.Transaction.signTransaction(tx, myIdentity.privateKey); //Send it to the network\n\n  conn.postTransactionCommit(txSigned); //Search asset\n\n  conn.searchAssets('My Asset').then(assets => console.log('Found assets with name My asset:', assets)); //Search metadata\n\n  conn.searchMetadata('here goes').then(metadata => console.log('Found asset metadata with metadata1 here goes:', metadata));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bgVacStf\",\n      children: [/*#__PURE__*/_jsxDEV(Vaccine_Staff_Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = Vaccine_Staff_Add_Vaccine;\nexport default Vaccine_Staff_Add_Vaccine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccine_Staff_Add_Vaccine\");","map":{"version":3,"sources":["/Users/zihadislam/react-app/frontend/src/components/pages/Vaccine-Staff-pages/Vaccine_Staff_Add_Vaccine.js"],"names":["React","Footer","Vaccine_Staff_Navbar","Vaccine_Staff_Add_Vaccine","driver","require","myIdentity","Ed25519Keypair","conn","Connection","tx","Transaction","makeCreateTransaction","name","immutable_attr1","metadata1","metadata2","makeOutput","makeEd25519Condition","publicKey","alice","txSigned","signTransaction","privateKey","postTransactionCommit","searchAssets","then","assets","console","log","searchMetadata","metadata"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAM,0BAAN;;;;AAEA,SAASC,yBAAT,GAAqC;AAEjC;AACJ,QAAMC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB,CAHqC,CAIrC;;;AACA,QAAMC,UAAU,GAAG,IAAIF,MAAM,CAACG,cAAX,EAAnB,CALqC,CAMrC;;AACA,QAAMC,IAAI,GAAG,IAAIJ,MAAM,CAACK,UAAX,CAAsB,qCAAtB,CAAb,CAPqC,CAQrC;;AACA,QAAMC,EAAE,GAAGN,MAAM,CAACO,WAAP,CAAmBC,qBAAnB,CACX;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,eAAe,EAAE;AAArC,GADW,EAEX;AAAEC,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,SAAS,EAAE;AAArC,GAFW,EAGX,CAAEZ,MAAM,CAACO,WAAP,CAAmBM,UAAnB,CACFb,MAAM,CAACO,WAAP,CAAmBO,oBAAnB,CAAwCZ,UAAU,CAACa,SAAnD,CADE,CAAF,CAHW,EAKXC,KAAK,CAACD,SALK,CAAX,CATqC,CAerC;;AACA,QAAME,QAAQ,GAAGjB,MAAM,CAACO,WAAP,CAAmBW,eAAnB,CAAmCZ,EAAnC,EAAuCJ,UAAU,CAACiB,UAAlD,CAAjB,CAhBqC,CAiBrC;;AACAf,EAAAA,IAAI,CAACgB,qBAAL,CAA2BH,QAA3B,EAlBqC,CAmBrC;;AACAb,EAAAA,IAAI,CAACiB,YAAL,CAAkB,UAAlB,EAA8BC,IAA9B,CAAmCC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,MAAhD,CAA7C,EApBqC,CAqBrC;;AACAnB,EAAAA,IAAI,CAACsB,cAAL,CAAoB,WAApB,EAAiCJ,IAAjC,CAAsCK,QAAQ,IAAIH,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DE,QAA9D,CAAlD;AAEE,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAUD;;KAlCQ5B,yB;AAoCT,eAAeA,yBAAf","sourcesContent":["import React from 'react';\nimport '../../../App.css';\nimport Footer from '../../Footer';\nimport Vaccine_Staff_Navbar from './Vaccine_Staff_Navbar';\nimport'./Vaccine_Staff_Home.css'\n\nfunction Vaccine_Staff_Add_Vaccine() {\n\n    // Require JS driver\nconst driver = require('bigchaindb-driver')\n// Create an identity key pair\nconst myIdentity = new driver.Ed25519Keypair()\n//Connect to the BigchainDB test network\nconst conn = new driver.Connection('https://test.bigchaindb.com/api/v1/')\n// Create a new transaction\nconst tx = driver.Transaction.makeCreateTransaction(\n{ name: 'My Asset', immutable_attr1: \"bla bla\" },\n{ metadata1: \"here goes\", metadata2: \"my metadata attributes\"},\n[ driver.Transaction.makeOutput(\ndriver.Transaction.makeEd25519Condition(myIdentity.publicKey))],\nalice.publicKey)\n//Sign the transaction\nconst txSigned = driver.Transaction.signTransaction(tx, myIdentity.privateKey)\n//Send it to the network\nconn.postTransactionCommit(txSigned)\n//Search asset\nconn.searchAssets('My Asset').then(assets => console.log('Found assets with name My asset:', assets))\n//Search metadata\nconn.searchMetadata('here goes').then(metadata => console.log('Found asset metadata with metadata1 here goes:', metadata))\n  \n  return (\n    <>\n    <div className='bgVacStf'>\n      <Vaccine_Staff_Navbar/>\n\n\n      <Footer/>\n    </div>\n    </>\n  );\n}\n\nexport default Vaccine_Staff_Add_Vaccine;"]},"metadata":{},"sourceType":"module"}